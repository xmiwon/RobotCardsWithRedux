{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","console","log","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","React","connect","searchRobots","requestRobots","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","rootReducer","createLogger","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ebd6403.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id, name, email}) => {\r\n    return (\r\n            <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img src={`https://robohash.org/${id}?150x150`} alt=\"pic\" />\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React  from 'react';\r\nimport Card from './Card'\r\n\r\n\r\nconst CardList = ({robots}) => {\r\nconsole.log('CardList')\r\n    return (\r\n        robots.map((user, i) => {\r\n            return (\r\n                <Card\r\n                    key={i}\r\n                    id={user.id}\r\n                    name={user.name}\r\n                    email={user.email}\r\n                />\r\n            \r\n            )\r\n        })\r\n    )\r\n}\r\nexport default CardList;","import React from 'react'\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    console.log('SearchBox')\r\n    return (\r\n        <div>\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" onChange={searchChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true})\r\n    }\r\n\r\n    render() {\r\n        \r\n            if (this.state.hasError) {\r\n                return <h1>Oops error</h1>\r\n            }\r\n            return this.props.children\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react'\r\n\r\nclass CounterButton extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.count !== nextState.count) {\r\n            return true;\r\n        } \r\n        return false\r\n    }\r\n\r\n    updateCount = () => {\r\n        this.setState(state => {\r\n            return {count: this.state.count + 1}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log('CounterButton')\r\n        return (\r\n            <button color={this.props.color} onClick={this.updateCount}>Count : {this.state.count}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterButton","import React, { Component } from 'react'\r\nimport CounterButton from './CounterButton'\r\n\r\nclass Header extends Component {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return false;\r\n    // }\r\n\r\n    render() {\r\n        console.log('Header')\r\n        return (\r\n            <div>\r\n                <h1 className=\"tc\">Robot Cards</h1>\r\n                <CounterButton color={'red'} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport Header from '../components/Header'\r\n\r\nimport { requestRobots, setSearchField } from '../actions'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.onRequestRobots()\r\n    }\r\n\r\n    render() {\r\n        const { searchField, onSearchChange, robots, isPending } = this.props\r\n\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase()) \r\n        })\r\n\r\n        return (\r\n            <div className='tc'>\r\n              <Header />\r\n              <SearchBox searchChange={onSearchChange}/>\r\n              <Scroll>\r\n                { isPending ? <h1>Loading</h1> :\r\n                  <ErrorBoundry>\r\n                    <CardList robots={filteredRobots} />\r\n                  </ErrorBoundry>\r\n                }\r\n              </Scroll>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_FAILED, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_PENDING } from './constants.js'\r\n\r\nexport const setSearchField = (text) => {\r\n    console.log(text)\r\n    return {\r\n        type: CHANGE_SEARCH_FIELD,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING})\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_FAILED, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_PENDING } from './constants.js'\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n    console.log(action.type)\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, {searchField: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, { isPending: true})\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false })\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false })\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons'\nimport { searchRobots, requestRobots } from './reducers';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots})\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}